```{r,fold=TRUE}
load("C:/Users/bcriv/Desktop/Redes sociales DNI/DNI_Redes_Sociales/out_refTrib.RData")
library(igraph)
comp <- clusters(G)
comp
# Identificar el ID de la componente gigante (la más grande)
giant_component_id <- which.max(comp$csize)
# Extraer la componente gigante
g_giant <- induced_subgraph(g, which(comp$membership == giant_component_id))
library(igraph)
comp <- clusters(G)
# Identificar el ID de la componente gigante (la más grande)
giant_component_id <- which.max(comp$csize)
# Extraer la componente gigante
g_giant <- induced_subgraph(G, which(comp$membership == giant_component_id))
V(g_giant)$name
View(df)
View(df)
valores <- df$from_user_screen_name[df$from_user_id %in% V(g_giant)$name]
valores
valores
length(V(g_giant)$name)
length(valores)
# DataFrame de ejemplo
df1 <- data.frame(id = c(1, 2, 3, 4, 5), valor = c(10, 20, 30, 40, 50))
# Lista de ids de interés
id_interes <- c(2, 4)
# Extraer valores correspondientes a esos ids
valores <- df1$valor[df1$id %in% id_interes]
# Mostrar los valores
print(valores)
library(igraph)
comp <- clusters(G)
# Identificar el ID de la componente gigante (la más grande)
giant_component_id <- which.max(comp$csize)
# Extraer la componente gigante
g_giant <- induced_subgraph(G, which(comp$membership == giant_component_id))
V(g_giant)$name
valores <- df$from_user_screen_name[df$from_user_id %in% V(g_giant)$name]
length(V(g_giant)$name)
length(valores)
length(unique(valores))
valores
V(g_giant)$name
length(unique(V(g_giant)$name))
length(unique(valores))
valores <- df$from_user_screen_name[df$from_user_id %in% V(g_giant)$name]
View(df)
df$from_user_id
df$from_user_id <- as.integer(df$from_user_id)
G <- graph_from_data_frame(select(df,from_user_screen_name,to_user_screen_name),directed = T)
library(dplyr)
G <- graph_from_data_frame(select(df,from_user_screen_name,to_user_screen_name),directed = T)
G <- simplify(G)
V(G)$name
V(G)$name
comp <- clusters(G)
# Identificar el ID de la componente gigante (la más grande)
giant_component_id <- which.max(comp$csize)
# Extraer la componente gigante
g_giant <- induced_subgraph(G, which(comp$membership == giant_component_id))
comp
g_giant
V(g_giant)$name
length(V(g_giant)$name)
load('C:/Users/bcriv/Desktop/Redes sociales DNI/DNI_Redes_Sociales/out_refTrib.RData')
# Extraer la componente gigante
g <- induced_subgraph(G, which(comp$membership == giant_component_id))
length(V(g)$name)
l_n  <- layout_nicely (g)
l_dh <- layout_with_dh(g)
l_fr <- layout_with_fr(g)
l_kk <- layout_with_kk(g)
# visualización
par(mfrow = c(2,2), mar = c(4, 3, 3, 1))
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Nicely")
plot(g, layout = l_dh, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Davidson-Harel")
plot(g, layout = l_fr, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Fruchterman-Reingold")
plot(g, layout = l_kk, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Kamada-Kawai")
g_un <- as.undirected(g)
l_n  <- layout_nicely (g_un)
l_dh <- layout_with_dh(g_un)
l_fr <- layout_with_fr(g_un)
l_kk <- layout_with_kk(g_un)
g_un <- as.undirected(g)
########## replica
set.seed(123)
l_n  <- layout_nicely (g_un)
l_dh <- layout_with_dh(g_un)
l_fr <- layout_with_fr(g_un)
l_kk <- layout_with_kk(g_un)
# visualización
par(mfrow = c(2,2), mar = c(4, 3, 3, 1))
plot(g_un, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Nicely")
plot(g_un, layout = l_dh, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Davidson-Harel")
plot(g_un, layout = l_fr, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Fruchterman-Reingold")
plot(g_un, layout = l_kk, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
title(main = "Kamada-Kawai")
plot(g_un, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.5)
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.5)
# visualización
par(mfrow = c(2,2), mar = c(4, 3, 3, 1))
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.1)
length(V(g)$name)
set.seed(123)
l_n  <- layout_nicely (g)
l_dh <- layout_with_dh(g)
l_fr <- layout_with_fr(g)
l_kk <- layout_with_kk(g)
# visualización
par(mfrow = c(2,2), mar = c(4, 3, 3, 1))
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.1)
title(main = "Nicely")
plot(g, layout = l_dh, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.1)
title(main = "Davidson-Harel")
plot(g, layout = l_fr, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",,edge.arrow.size = 0.1)
title(main = "Fruchterman-Reingold")
plot(g, layout = l_kk, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",,edge.arrow.size = 0.1)
title(main = "Kamada-Kawai")
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Nicely")
plot(g, layout = l_dh, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Davidson-Harel")
plot(g, layout = l_fr, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Fruchterman-Reingold")
plot(g, layout = l_kk, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
# visualización
par(mfrow = c(2,2), mar = c(4, 3, 3, 1))
plot(g, layout = l_n,  vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Nicely")
plot(g, layout = l_dh, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Davidson-Harel")
plot(g, layout = l_fr, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Fruchterman-Reingold")
plot(g, layout = l_kk, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
title(main = "Kamada-Kawai")
cluster_edge_betweenness(g)
xd <- cluster_edge_betweenness(g)
xd
xd <- cluster_edge_betweenness(g)
plot(xd, g, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black")
plot(xd, g, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
par(mfrow = c(1,1))
plot(xd, g, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
xd <- cluster_fast_greedy(g)
plot(g, layout = layout_with_fr(g), vertex.color = membership_2_groups,
vertex.size = 4, vertex.label = NA, vertex.frame.color = "black")
membership_2_groups <- cut_at(xd, no = 2)
plot(g, layout = layout_with_fr(g), vertex.color = membership_2_groups,
vertex.size = 4, vertex.label = NA, vertex.frame.color = "black")
membership_2_groups
membership_2_groups <- cut_at(xd, no = 3)
membership_2_groups
xd <- cluster_edge_betweenness(g)
membership_2_groups <- cut_at(xd, no = 3)
membership_2_groups
plot(xd, g, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
xd <- cluster_leading_eigen(g)
membership_2_groups <- cut_at(xd, no = 3)
membership_2_groups <- cut_at(xd, no = 2)
xd <- cluster_leading_eigen(g)
membership_2_groups <- cut_at(xd, no = 2)
plot(xd, g, vertex.size = 4, vertex.label = NA, vertex.color = "black", vertex.frame.color = "black",edge.arrow.size = 0.2)
par(mfrow = c(1,1))
plot(g, layout = layout_with_fr(g), vertex.color = membership_2_groups,
vertex.size = 4, vertex.label = NA, vertex.frame.color = "black")
xd <- cluster_optimal(g)
membership_2_groups
save('C:/Users/bcriv/Desktop/Redes sociales DNI/DNI_Redes_Sociales/out_refTrib.RData')
save(g,df,'C:/Users/bcriv/Desktop/Redes sociales DNI/DNI_Redes_Sociales/out_refTrib.RData')
save(g,df,file='C:/Users/bcriv/Desktop/Redes sociales DNI/DNI_Redes_Sociales/out_refTrib.RData')
library(igraph)
# Crear un grafo de ejemplo
g <- erdos.renyi.game(10, 0.3, directed = FALSE)
# Aplicar el método de clusterización basado en la betweenness de las aristas
clusters <- cluster_edge_betweenness(g)
# Verificar las comunidades originales detectadas
print(clusters)
# Forzar la división en 2 grupos
membership_2_groups <- cut_at(clusters, no = 2)
# Ver la asignación de nodos a los 2 grupos
print(membership_2_groups)
# Graficar el grafo con los nodos organizados en 2 grupos
plot(g, layout = layout_with_fr(g), vertex.color = membership_2_groups,
vertex.size = 4, vertex.label = NA, vertex.frame.color = "black")
